import pandas as pd

# Function to clean up a given CSV file and add new rows for the average metric
# of all countries except Argentina under the country name "Rest of Latam"
def clean_csv(input_file, output_file, selected_countries, metric):
    # Load the dataset, skipping the first 4 rows
    df = pd.read_csv(f"{input_file}", skiprows=4)
    df.columns = df.columns.str.strip()  # Strip column names

    # Filter rows for the selected countries (e.g., ["Argentina", "Uruguay", "Chile"])
    df_filtered = df[df["Country Name"].isin(selected_countries)]
    
    # Drop unwanted columns
    df_filtered = df_filtered.drop(columns=["Indicator Name", "Indicator Code", "Unnamed: 68"], errors="ignore")
    
    # Reshape the dataframe: melt so that each row corresponds to a country and year with the metric value
    df_melted = df_filtered.melt(
        id_vars=["Country Name", "Country Code"],
        var_name="Year",
        value_name=metric
    )
    
    # Convert "Year" to numeric and sort the dataframe by Year
    df_melted["Year"] = pd.to_numeric(df_melted["Year"], errors="coerce")
    df_melted = df_melted.sort_values(by="Year")
    
    # Compute the average of the metric for all countries except Argentina for each year
    avg_excl_arg = (
        df_melted[df_melted["Country Name"] != "Argentina"]
        .groupby("Year")[metric]
        .mean()
        .reset_index()
    )
    
    # Create new rows for each year with the computed average, using "Rest of Latam" as the country name
    avg_excl_arg["Country Name"] = "Rest of Latam"
    avg_excl_arg["Country Code"] = None  # Placeholder; adjust as needed
    # Ensure the new dataframe has the same column order as df_melted
    avg_excl_arg = avg_excl_arg[["Country Name", "Country Code", "Year", metric]]
    
    # Append the new rows to the melted dataframe
    df_final = pd.concat([df_melted, avg_excl_arg], ignore_index=True)
    
    # Display the results (optional)
    print(df_final.head())
    print(df_final)
    
    # Save the cleaned dataset with the additional entries
    df_final.to_csv(f"CSV CLEAN/{output_file}", index=True, sep=";")

# Define file paths
fixed_tel_input = "FIXED_TEL_100.csv"
fixed_tel_output = "Cleaned_FIXED_TEL_100_test.csv"

# Clean the fixed telephone dataset
clean_csv(
    fixed_tel_input, 
    fixed_tel_output, 
    selected_countries=["Argentina", "Uruguay", "Chile"], 
    metric="Internet Usage (%)"
)
